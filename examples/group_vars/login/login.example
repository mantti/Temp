---

internal_interface: "em2"
external_interface: "em1"
ib_interface: "ib0"

network_scheduler: "fq_codel"

network_ether_interfaces:
  - device: "{{ib_interface}}"
    bootproto: "static"
    onboot: "yes"
    address: "{{ib_ip_addr}}"
    netmask: "{{ib_net_mask}}"
    nm_controlled: "no"

infiniband_available: True
rdma_configure_single_port: True

vcpus: "{{vm_cpus}}"
ram: "{{vm_mem}}"
disks:
  - { pool: "vms", size: 180 }
bridges:
  - br_ext
  - br_int
location: "{{repo_location}}"
kickstart_tempdir: "/tmp"
fqdn: "{{siteName}}.{{siteDomain}}"
networks:
  - "network --onboot=yes --bootproto=dhcp --device={{ internal_interface }} --noipv6 --nodefroute"
  - "network --onboot={{enable_ext_nic}} --device={{external_interface}} --bootproto=static --ip={{ext_ip_addr}} --netmask={{ext_net_mask}} --nameserver={{nameserver1}} --hostname={{ fqdn }} --gateway={{ext_gateway}} --noipv6"
extdefroute: True
chgIntGW: True

# This makes ansible-role-ferm-firewall restart fail2ban if ferm is reloaded.
ferm_fail2ban: True

# Do not install host keys on this node
install_ssh_host_keys: False
# Do install the known_hosts files
install_ssh_known_hosts_from_http: True


# Ferm - firewall
ferm_rules_extra:
 08_fail2ban:
 - chain: INPUT
   table: filter
   domains: [ip]
   rules:
     - {rule: "proto tcp mod multiport destination-ports (22) jump f2b-sshd;", comment: "default fail2ban rule"}
 - chain: f2b-sshd
   table: filter
   domains: [ip]
   rules:
     - {rule: "RETURN;", comment: "default fail2ban rule"}
 90_ssh_internet:
 - chain: INPUT
   table: filter
   domains: [ip, ip6]
   rules:
     - {rule: "proto tcp dport (22) mod state state (NEW) mod comment comment 'Allow new SSH' ACCEPT;", comment: "SSH allow new connections from everywhere"}
 92_nat:
 - chain: FORWARD
   table: filter
   domains: [ip]
   rules:
     - {rule: "interface {{ internal_interface }} outerface {{ external_interface }} mod comment comment 'forward from internal net ' ACCEPT;", comment: "forwarding"}
     - {rule: "interface {{ external_interface }} outerface {{ internal_interface }} mod state state (ESTABLISHED RELATED) mod comment comment 'forward established and related from internal net' ACCEPT;", comment: "forwarding"}
 - chain: POSTROUTING
   table: nat
   domains: [ip]
   rules:
     - {rule: "outerface {{ external_interface }} saddr ( {{ internal_net }} ) mod comment comment 'masquerade for internal net' MASQUERADE;", comment: "masquerade"}

# Fail2ban - firewall
fail2ban_config:
  ignoreip: 127.0.0.0/8 {{ internal_net }} {{ trusted_public_networks }}
  bantime: 600
  findtime: 1800
  maxretry: 8
  destemail: root@localhost
fail2ban_jails:
  sshd:
    banaction: "iptables-multiport"
    enabled: 'true'
    port: 'ssh'
    protocol: 'tcp'
    logpath: '/var/log/secure'
    maxretry: 10

unconfigured_packages:
  - fgci-meta-login

sshd:
 PermitRootLogin: "without-password"

#NTP
ntp_config_server: [ "{{ hostvars[groups['install'][0]]['ansible_hostname'] }}", "{{ hostvars[groups['admin'][0]]['ansible_hostname'] }}" ]

#CVMFS
cvmfs_http_proxy: "{{ http_proxy }}"
cvmfs_quota_limit: "10240"

#Configure SMART
smartd_service: True

#Limits for MPI
limits_domains:
  - domain: '*'
    type: 'hard'
    item: memlock
    value: unlimited
  - domain: '*'
    type: 'soft'
    item: memlock
    value: unlimited
  - domain: '*'
    type: 'hard'
    item: stack
    value: unlimited
  - domain: '*'
    type: 'soft'
    item: stack
    value: unlimited

## PAM - overwrite pam.d/system-auth and password-auth
pam_enabled: True

## PXE

kickstart_profile: FGCI-login-node

# Note on Login node partitioning:
#
# Each site can fine tune this to match their needs
# Only requeirement is that Root part needs at least 200GB
# Please note that if you rather not have a /local partition you can remove it.
# If so, don't forget to add "--grow" in part / line

kickstart_partitions: |
  zerombr
  clearpart --all --initlabel --drives=sda
  bootloader --append="selinux=0" --boot-drive=sda
  part biosboot --fstype="biosboot" --size=1
  part /boot/efi --fstype=efi --label EFI  --size=200
  part / --fstype="xfs" --ondisk=sda --size=200000 --grow
  part swap --size=500
  # part /local --fstype="xfs" --ondisk=sda --size=500000

kickstart_packages: |
  atlas
  bash-completion
  blas
  bonnie++
  cvs
  epel-release
  fftw
  fftw2
  gcc
  gcc-c++
  gcc-gfortran
  git
  glibc.i686
  @infiniband
  infiniband-diags
  iperf
  java-1.8.0-openjdk
  lapack
  libcgroup
  libgcc.i686
  libgfortran
  libstdc++.i686
  libxml2.i686
  mcelog
  netcdf
  nfs-utils
  nscd
  numpy
  openssh-server
  perl-Filesys-Df
  rsync
  subversion
  xerces-c
  yum-plugin-fastestmirror
  Lmod

