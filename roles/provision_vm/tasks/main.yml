---
- name: copy over kickstart file
  template: src="kickstart.cfg" dest="{{ kickstart_tempdir }}/{{ inventory_hostname.split('.').0 }}.ks"
  become: yes
  delegate_to: "{{ hyper }}"

- name: copy over virt-install script
  template: src="virt-install.sh" dest="{{ kickstart_tempdir }}/{{ inventory_hostname.split('.').0 }}-install.sh"
  become: yes
  delegate_to: "{{ hyper }}"

- name: creates VM disks directory
  file: path={{ libvirt_pool_path }} state=directory owner=qemu group=qemu mode=0770
  run_once: true
  delegate_to: "{{ hyper }}"

- name: Check libvirt storage pool
  virt_pool: state=active name="{{ libvirt_pool_name }}"
  register: libvirt_pool_check
  delegate_to: "{{ hyper }}"

- name: Define libvirt storage pool
  command: /usr/bin/virsh pool-define-as {{ libvirt_pool_name }} {{ libvirt_pool_type }} --target {{ libvirt_pool_path }}
  run_once: true
  when: libvirt_pool_check.rc == 1
  delegate_to: "{{ hyper }}"

- name: Start libvirt storage pool
  virt_pool: state=active name="{{ lib_virt_pool_name }}"
  delegate_to: "{{ hyper }}"

- name: set libvirt storage pool autostart
  virt_pool: autostart=yes name="{{libvirt_pool_name}}"
  delegate_to: "{{ hyper }}"

- name: run virt-install script
  command: "bash {{ kickstart_tempdir }}/{{ inventory_hostname.split('.').0 }}-install.sh"
  become: yes
  #environment: env_virt_install
  environment: { http_proxy: "" }
  args:
    creates: "/etc/libvirt/qemu/{{ inventory_hostname.split('.').0 }}.xml"
  delegate_to: "{{ hyper }}"

- name: wait for VM to become available before continuing
  wait_for: port=22 host="{{ fqdn }}" timeout=600
  delegate_to: "{{ hyper }}"

- name: set vm to autostart
  command: /bin/virsh autostart "{{ inventory_hostname.split('.').0 }}"
  delegate_to: "{{ hyper }}"

- name: Remove kickstart file
  file: path="{{ kickstart_tempdir }}/{{ inventory_hostname.split('.').0 }}.ks" state=absent
  delegate_to: "{{ hyper }}"

- name: Remove install script
  file: path="{{ kickstart_tempdir }}/{{ inventory_hostname.split('.').0 }}-install.sh" state=absent
  delegate_to: "{{ hyper }}"
