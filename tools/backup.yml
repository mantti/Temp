---
# This playbook will make a backup of your Cluster's critical files
#
# TODO:
# - create a dir name with embeded date
# - have maximum number of backups | delete old ones
# - bckpDir variable valid for all play

- hosts: localhost
  vars:
    - bckpDir: "backup"
    - backup_dir: "/tmp/{{ bckpDir }}"

  # Create backup folder
  tasks:
    - name: Create a backup folder # Remember to add it to .gitingnore
      file: path={{ backup_dir}} state=directory mode=0755
      tags: preBackup

    - name: Check if hostcert.pem and hostkey.pem exists locally
      stat: path={{ inventory_dir }}/files/certificates/hostcert.pem
      stat: path={{ inventory_dir }}/files/certificates/hostkey.pem
      tags: preBackup

    - name: Check if munge.key exists locally
      stat: path={{ inventory_dir }}/files/munge.key
      tags: preBackup

    - name: Check if nodes dir exists locally
      stat: path={{ inventory_dir }}/files/nodes/{{ item }}
      with_items:
        - "{{ groups['compute'] }}"
        - install
        - login
        - grid
        - nfs
      tags: preBackup

    # Backup Repo
    - name: compress repo into tarball and place it in backup folder
      shell: tar -zcf {{ backup_dir }}/fgci-ansible-{{ ansible_date_time.date }}.tar.gz .
      args:
        chdir: "{{ inventory_dir }}"

- hosts: install
  become: yes
  vars:
    - bckpDir: "backup"
    - backup_dir: "/tmp/{{ bckpDir }}"

  tasks:
    - name: compress Slurm log dir into tarball
      shell: tar -zcf /tmp/slurm-logs-{{ ansible_date_time.date }}.tar.gz .
      args:
        chdir: /var/log/slurm/

    - name: Copy files from Install node
      fetch: src={{ item }} dest={{ backup_dir }} fail_on_missing=yes
      with_items:
        - /etc/slurm/slurm.conf
        - /etc/passwd
        - /etc/group
        - /tmp/slurm-logs-{{ ansible_date_time.date }}.tar.gz

- hosts: grid
  become: yes
  vars:
    - bckpDir: "backup"
    - backup_dir: "/tmp/{{ bckpDir }}"

  tasks:
    - name: compress ARC log dir into tarball
      shell: tar -zcf /tmp/arc-logs-{{ ansible_date_time.date }}.tar.gz .
      args:
        chdir: /var/log/arc/

    - name: Copy files from grid node
      fetch: src={{ item }} dest={{ backup_dir }} fail_on_missing=yes
      with_items:
        - /etc/arc.conf
        - /tmp/arc-logs-{{ ansible_date_time.date }}.tar.gz

- hosts: install
  become: yes
  vars:
    - bckpDir: "backup"
    - backup_dir: "/tmp/{{ bckpDir }}"

  tasks:
    - name: stop slurmctld
      service: name=slurmctld state=stopped

    - name: stop slurmdbd
      service: name=slurmdbd state=stopped
      delegate_to: install

    - name: Dump Slurm DB
      mysql_db: state=dump name=all target=/tmp/{{ siteName }}-install-slurmDB.sql
      delegate_to: install

    - name: start slurmdbd
      service: name=slurmdbd state=started
      delegate_to: install

    - name: start slurmctld
      service: name=slurmctld state=started

    - name: Fetch Slurm DB dump file from install node
      fetch: src=/tmp/{{ siteName }}-install-slurmDB.sql dest={{ backup_dir }} fail_on_missing=yes


