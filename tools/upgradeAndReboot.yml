---
#
# This role will upgrade and reboot all cluster nodes
# by Lu√≠s for Ansible version 1.9.4
# TO-DO: Handle proper Slurm shutdown
# Please note: This will reboot NFS and other nodes independently if there are running jobs or not.
#

- name: Upgrade and Reboot NFS Node
  hosts: nfs
  remote_user: root
  gather_facts: false
  vars_prompt:
    - name: continue
      prompt: "This will reboot the whole cluster even if there are running jobs!\nAre you sure that you want to continue?\n(yes|no):\n"
      private: no

  tasks:

  - name: Full update
    yum: name=* update_cache=yes  state=latest

  - name: Reboot nfs node
    shell: sleep 2 && /sbin/shutdown -r now "Node software upgrade reboot"
    async: 1
    poll: 0
    ignore_errors: true

  - name: waiting for nfs to come back
    local_action: wait_for host="{{ ansible_ssh_host | default(inventory_hostname) }}" state=started delay=30 timeout=300
    become: false

- name: Upgrade and shutdown VMs
  hosts: vhosts
  remote_user: root
  gather_facts: false

  tasks:

  - name: Full update
    yum: name=* update_cache=yes  state=latest

  - name: Shutdown VM nodes
    shell: sleep 2 && /sbin/shutdown -h now "Node software upgrade reboot"
    async: 1
    poll: 0
    ignore_errors: true

- name: Upgrade and Reboot Admin and Login nodes
  hosts: [admin, login]
  remote_user: root
  gather_facts: false

  tasks:

  - name: Full update
    yum: name=* update_cache=yes  state=latest

  - name: Reboot Admin and Login nodes
    shell: sleep 2 && /sbin/shutdown -r now "Node software upgrade reboot"
    async: 1
    poll: 0
    ignore_errors: true

  - name: waiting for Admin and Login to come back
    local_action: wait_for host="{{ ansible_ssh_host | default(inventory_hostname) }}" state=started delay=30 timeout=300
    become: false


- name: Drain for update and reboot Compute Nodes
  hosts: install
  remote_user: root
  gather_facts: false

  tasks:

# Computes should be up-to-date from ansible-pull script

  - name: Drain for reboot computes
    command: scontrol update nodename="{{ item }}" state=drain reason=reboot
    with_items: "{{ groups['compute'] }}"

  - name: waiting for computes to come back
    local_action: wait_for host="{{ ansible_ssh_host | default(inventory_hostname) }}" state=started delay=30 timeout=300
    become: false

  - name: Resume computes
    command: scontrol update nodename="{{ item }}" state=resume
    with_items: "{{ groups['compute'] }}"

